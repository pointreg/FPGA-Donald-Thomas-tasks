5.8. Отправитель CRC. Циклический избыточный код (Cyclic Redundancy Check - CRC) - широко распространенный метод обнаружения ошибок, возникающих при передаче данных. Отправляемая последовательность битов трактуется как двоичный многочлен; при передаче данных вычисляется остаток от деления соответствующего многочлена на некоторый фиксированный
многочлен; в качестве контрольной суммы приемнику посылается дополнение вычисленного остатка. Зная контрольную сумму, приемник может определить, возникла ли при передаче данных ошибка. 

От вас требуется по потоку из одиннадцати последовательно передаваемых битов вычислить контрольную сумму. Представленный в примере генератор СRС-кода- один из используемых в USB-2.0. Напишите аппаратный поток, реализующий эту функциональность с использованием операторов always_comb, always_ff и assign (без вентилей). Разработайте тестовое окружение для проверки корректности работы.

Ниже показана схема так называемого СRС-калькулятора. Символ  означает XOR, т. е. исключающее ИЛИ (см. task 5_8(1).PNG).

В начале передачи все триггеры СRС-калькулятора устанавливаются в 1. На последующих тактах биты сообщения передаются калькулятору (по одному биту за такт; старший идет первым). Биты также передаются приемнику, но здесь мы это опускаем. После того как одиннадцать бит отправлены, остаток (хранящийся в триггерах калькулятора) копируется в отдельный сдвиговый регистр (на схеме не показан) в инвертированной форме. Биты регистра последовательно, начиная со старшего, подаются на вход калькулятору (и отправляются приемнику). После их передачи в калькуляторе должно сформироваться
так называемое остаточное значение - 5'b01100. (см. task 5_8(2).PNG)

Обратите внимание, что при инвертировании остатка состояние триггеров СRС-калькулятора не изменяется - инвертируется копия. После передачи последнего бита сообщения старший бит инвертированного остатка подается в калькулятор на следующем такте.

Завершая описание: приемник устроен аналогично, за тем исключением, что он не инвертирует остаток, а просто получает биты, переданные отправителем (сообщение и контрольную сумму). Если остаточное значение получается равным 5'b01100, значит, сообщение получено правильно. Напишите тестовое окружение, посылающее следующее 11-битное сообщение СRС-калькулятору (старший, самый левый бит передается первым): 
11'b0101_1100_101

Остаток, вычисленный для этого сообщения, х[4:0] = 5'b00011 , инвертируется и отправляется, как было описано выше. Для упрощения отладки приведем первые значениях: 5'b11111 (начальное значение), 5'b11011, 5'b10l10, 5'b01001, ...

Для вывода значений (чтобы проверить их правильность) используйте процедуру $monitor или $display.
