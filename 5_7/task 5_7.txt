5.7. Счет от О до 99. Спроектируйте двухдекадный счетчик с использованием двух 4-битных синхронных каскадных декадных счетчиков. Поясним, что имеется в виду:
О «синхронный» - входы синхронизации всех триггеров соединены с одним тактовым сигналом;
О «декадный счетчию> - после сброса принимает значение 4'b0000; пробегает значения 4'b0000, 4'b0001, ... 4'b1001, 4'b0000 по фронту тактового сигнала, при условии что установлен countEnable;
О «countEnable» - сигнал разрешения счета; счетчик не изменяет значения, если этот сигнал не установлен;
О «каскадный» - имеется выход carryOut, показывающий, что вход countEnable установлен и значение счетчика изменяется от 4'b1001 к 4'b0000; по этому сигналу инкрементируется следующая по старшинству цифра - выход carryOut соединен с входом countEnable следующего декадного счетчика.

А. Нарисуйте диаграмму состояний одного декадного счетчика. Состояния счетчика кодируются 4 битами, названными от А (младший бит) до D (старший бит). Это автомат Мили. Пример взаимодействия сигналов приведен на временной диаграмме ниже (см. task 5_7.PNG).

В. Напишите на SystemVerilog модуль декадного счетчика. Используйте явный стиль описания конечного автомата.

module decadeCTR
(input logic ck, r, countEnable,
output logic carryOut,
output logic [3:0] DCBA);

С. Напишите на SystemVerilog модуль верхнего уровня для двухдекадного счетчика. В нем должны создаваться экземпляры двух декадных счетчиков (число единиц и число десятков). Модуль верхнего уровня должен иметь такой заголовок:

module zeroTo99
(input logic ck, r,
countEnable, // countEnabe для первой декады
output logic carryOut,// перенос из декады десятков
output logic [3:0] DCBA10, DCBA1); // выходы FF двух декад

Вот временная диаграмма работы модуля (см. task 5_7.PNG).