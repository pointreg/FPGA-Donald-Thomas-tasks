6.4. Контроллер памяти. Для некоторых запоминающих устройств операция чтения-записи подразумевает чтение или запись нескольких байтов по последовательным адресам. Например, для чтения устройству посылается адрес первого байта, а в ответ передается байт, хранящийся по этому адресу, и по нескольким следующим. Задача состоит в том, чтобы написать контроллер для показанной ниже модели запоминающего устройства.

module mem #(parameter DW = 16, W = 256, AW = $clog2(W))
(input logic re, we, clk, 
input logic [AW-1:0] Addr,
inout tri [DW-1:0] Data);
logic [DW-1:0] M[W];
logic [DW-1:0] out;
initial
	for (int i = 0; i < W; i++)
		M[i] = i;
assign Data = (re) ? out: 'bz;
always @(posedge clk)
	if (we) M[Addr] <= Data;
always_comb
	out = M[Addr];
endmodule: mem

Ниже приведен заголовок требуемого контроллера памяти. 

module memController 
#(parameter logic [7:0] page = 8'h02) 
(inout tri [15:0] addrData, 
input logic addrValid, rw, clk, reset);

Экземпляр модуля mem создается внутри модуля memController, а memController соединяется с процессором (который служит тестовым окружением). Для соединения memController и процессора используется 16-битная тристабильная линия (см. диаграмму ниже), сигнал addrValid, показывающий, что на линию помещен адрес, и индикатор чтения-записи rw, значение 1 которого соответствует чтению, а 1 - записи. Поскольку между контроллером и процессором есть лишь один «пучок проводов» (addrData), то адрес и данные мультиплексируются по времени. 

На временной диаграмме ниже показано, как работает шина. Процессор устанавливает значение на линиях addrValid и rw. Линия addrData формируется как контроллером памяти, так и процессором, но в разное время. Рассмотрим пример чтения из памяти. Процессор помещает адрес на линию addrData и устанавливает сигнал addrValid; на диаграмме это происходит на такте А. Поскольку речь идет о чтении, устанавливается также сигнал rw = 1. По фронту тактового сигнала в конце такта А (в котором установлен addrValid) контроллер памяти понимает, что началась передача по шине (на это указывает addrValid), и загружает копию значения на линии addrData в свой регистр. Это адрес первого элемента данных (data1), будем называть его базовым адресом. 

На следующем такте (В) контроллер памяти помещает на линию addrData значение (на диаграмме обозначено data1), прочитанное по базовому адресу. На такте С на линию addrData помещается значение data2 (по базовому адресу плюс 1). На такте D на линию помещается data3 из ячейки с базовым адресом плюс 2, а на такте Е - data4 из ячейки с базовым адресом плюс 3. В этой точке операция чтения завершается. Следующая передача по шине может начаться уже на такте F (если так произойдет, то на линию addrData нужно будет поместить адрес чтения или записи). 

При записи в память в конце такта А на линии rw должен быть 0. Тогда на протяжении всех пяти тактов (А-Е) значения на линии addrData устанавливал бы процессор. Контроллер памяти увидел бы сигнал addrValid, означающий начало передачи по шине, понял бы, что это операция записи (rw равно 0), прочитал бы с шины адрес и все четыре элемента данных и записал бы их в память по адресам addr, addr+1, addr+2 и addr+3. 

Отметим, что контроллер не запоминает эти значения, чтобы произвести запись в память позже. Вместо этого значение, находящееся на линии addrData, записывается в память на том же такте. Это относится и к чтению - на линию addrData помещается значение, прочитанное из памяти на текущем такте, т. е. контроллер памяти, процессор (а значит, и линии шины) и запоминающее устройство синхронизируются одним и тем же тактовым сигналом. 

Что означает параметр page? К шине может быть подключено несколько контроллеров памяти. Вероятно, вы обратили внимание, что на линию шины помещаются 16 бит адреса, но в модуле mem адрес 8-битный. Наш контроллер памяти должен отвечать, только когда старшие 8 бит адреса (они и называются страницей) равны 2. Все остальное игнорируйте. Впрочем, можно было бы создать экземпляр контроллера с другим номером страницы, и все заработало бы! 

(см. task 6_4.PNG)

Напишите модуль memController и тестовое окружение, демонстрирующее, что он работает правильно. 

