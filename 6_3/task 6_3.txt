6.3. Разделенные транзакции. Определите новый протокол шины, в которой присутствуют 16-битные линии адреса и данных, а также сигналы start, read и dataReady. В случае записи устанавливается сигнал start, а адрес и данные помещаются на соответствующие линии шины строго одновременно. Запоминающее устройство копирует значение в свой буфер и записывает его в память настолько быстро, насколько может. В случае чтения адрес помещается на линию шины одновременно с установкой сигналов геаd и start. Обе эти транзакции занимают линии шины в течение одного такта. В случае чтения память отвечает с задержкой в несколько тактов, помещая на шину прочитанное знаение и устанавливая сигнал dataReady. 

Отличительная особенность этого протокола состоит в том, что транзакцию можно разделить. Например, чтение начинается, как описано выше, одним тактом. Позже память отвечает, возвращая прочитанные данные. Это позволяет процессору начать чтение и запись на нескольких запоминающих устройствах, а затем дожидаться результатов. Таким образом, процессор может в одном такте обратиться для чтения к одному устройству, а в следующем такте - к другому. А спустя пару тактов появятся результаты. 

Чтобы это все работало, процессор должен знать, какое именно запоминающее устройство ему отвечает. Кроме того, необходим арбитраж шины - если два или более устройств хотят осуществить транзакцию на шине, для выбора одного из них должна существовать схема назначения приоритетов. Что касается первого вопроса, то вместе с возвратом прочитанного значения запоминающее устройство может поместить на линию адреса 4 старших бита адреса, чтобы показать, какая страница отвечает. Тогда процессор сможет разобраться, что делать с полученным значением. 

Что касается схемы приоритетов: каждое устройство, способное формировать значения на шине, должно иметь линию запроса, идущую к арбитру. Арбитр может быть представлен автоматом Мура, который решает, какое устройство будет формировать значения на шине на следующем такте. Он может отправить любому устройству сигнал разрешения, сообщая, что оно может занять шину. 

Эта задача не имеет однозначного решения, нужно рассмотреть разные компромиссы. Вот несколько вопросов для размышления. Может ли запоминающее устройство ставить в очередь запросы на чтение или запись, а затем обрабатывать их в порядке поступления? Если да, то какова максимальная длина очереди? Каковы приоритеты устройств? Насколько детальной вы предполагаете сделать модель памяти? Выбор конкретных решений остается за вами. Ответьте на эти вопросы в процессе проектирования - это доставит вам удовольствие. 